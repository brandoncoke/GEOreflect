shiny::runApp()
runApp()
test= read.delim("~/../Downloads/GSE185630.top.table.tsv")
View(test)
test= test[1:100,c(8,3,6)]
write.table(test, "~/test.tsv")
runApp()
write.delim(test, "~/test.tsv")
write.table(test, "~/test.tsv", sep= "\t")
runApp()
library(shiny); runApp('app_and_gpl570.R')
runApp()
runApp()
runApp()
runApp('app_and_gpl570.R')
runApp()
runApp('app_and_gpl570.R')
runApp('app_and_gpl570.R')
runApp('app_and_gpl570.R')
runApp('app_and_gpl570.R')
runApp('app_and_gpl570.R')
runApp('app_and_gpl570.R')
runApp()
runApp('app_and_gpl570.R')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
frame= read.delim("~/../Downloads/GSE185630.top.table.tsv")
colspresent= colnames(frame)
if(any(grepl("expr|logfc|fc|fold|log_", as.character(colspresent),
ignore.case = T))){
defualt_logfc= grep("expr|logfc|fc|fold|log_", as.character(colspresent),
ignore.case = T)[1]
#if it has multiple fcs
if(any(grepl("log", as.character(colspresent), ignore.case = T)
&
grepl("fold", as.character(colspresent), ignore.case = T)
)
){
bool= grepl("log", as.character(colspresent), ignore.case = T) &
grepl("fold", as.character(colspresent), ignore.case = T)
defualt_logfc= which(bool)[1]
}
}else{
defualt_logfc= 2
}
defualt_logfc
colnames(frame)
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp('app_and_gpl570.R')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('app_and_gpl570.R')
bootstapPage
?bootstapPage
?bootstrapPage
runApp('app_and_gpl570.R')
runApp('app_and_gpl570.R')
runApp()
runApp()
class(mtcars$mpg)
runApp()
runApp('app_and_gpl570.R')
library(shiny)
server= shinyServer(function(input,output,session){
# listen to the action button
observeEvent(input$btn1,{
# a simple text string
message = "hello"
# send the message to the event handler with name handler1 if we press the action button
session$sendCustomMessage("handler1", message)
})
})
ui= shinyUI(
bootstrapPage(
# include the message.js script so the JavaScript knows the custom message handler we have written
includeScript("www/message.js"),
# a normal action button.
actionButton("btn1","show alert")
)
)
# Create Shiny app ----
shinyApp(ui, server)
runApp('~/example_servr.R')
runApp('~/example_servr.R')
runApp('~/example_servr.R')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('~/example_servr.R')
runApp()
runApp('app_and_gpl570.R')
runApp('app_and_gpl570.R')
runApp('app_and_gpl570.R')
runApp('app_and_gpl570.R')
runApp('app_and_gpl570.R')
runApp('app_and_gpl570.R')
runApp('app_and_gpl570.R')
runApp()
runApp('app_and_gpl570.R')
runApp('app_and_gpl570.R')
runApp('app_and_gpl570.R')
runApp('app_and_gpl570.R')
shiny::runApp()
library(shiny)
require(openxlsx)
require(ggplot2)
require(DT)
require(plotly)
require(shinyFiles)
install.packages(shinyFiles)
install.packages('shinyFiles')
runApp()
